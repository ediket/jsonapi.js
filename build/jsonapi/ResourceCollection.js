
'use strict';

var _ = require('lodash');
var Backbone = require('backbone');
var Collection = Backbone.Collection;
var Resource = require('./Resource');
var SerializeMixin = require('./SerializeMixin');

module.exports = Collection.extend(_.extend({}, SerializeMixin, {

  sync: function sync() {
    return false;
  },

  initialize: function initialize(models, options) {

    if (!options || !options.type) {
      throw new Error('type is required');
    }

    this.type = options.type;

    this.on('add', function (resource) {

      if (resource.type !== this.type) {
        throw new Error('type [' + this.type + '] is required');
      }
    });
  },

  create: function create() {

    if (arguments[0]) {
      arguments[0].type = arguments[0].type || this.type;
    }

    return Collection.prototype.create.apply(this, arguments);
  },

  model: Resource,

  toJSON: function toJSON() {

    return Collection.prototype.toJSON.apply(this, arguments);
  },

  toLinkage: function toLinkage() {

    return _.map(this.models, function (resource) {
      return resource.toLinkage();
    });
  },

  merge: function merge(resources) {

    if (!resources instanceof this.constructor) {
      throw new Error('merged resources should be a ResourceCollection');
    }

    this.set(resources.models, { remove: false });

    return this;
  }

}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc29uYXBpL1Jlc291cmNlQ29sbGVjdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsWUFBWSxDQUFDOztBQUdiLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQixJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbkMsSUFBSSxVQUFVLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQztBQUNyQyxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDckMsSUFBSSxjQUFjLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7O0FBR2pELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxjQUFjLEVBQUU7O0FBRTlELE1BQUksRUFBRSxnQkFBWTtBQUFFLFdBQU8sS0FBSyxDQUFDO0dBQUU7O0FBRW5DLFlBQVUsRUFBRSxvQkFBVSxNQUFNLEVBQUUsT0FBTyxFQUFFOztBQUVyQyxRQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRTtBQUM3QixZQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7S0FDckM7O0FBRUQsUUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDOztBQUV6QixRQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxVQUFVLFFBQVEsRUFBRTs7QUFFakMsVUFBSSxRQUFRLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFDL0IsY0FBTSxJQUFJLEtBQUssQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxlQUFlLENBQUMsQ0FBQztPQUN6RDtLQUVGLENBQUMsQ0FBQztHQUVKOztBQUVELFFBQU0sRUFBRSxrQkFBWTs7QUFFbEIsUUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDaEIsZUFBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUM7S0FDcEQ7O0FBRUQsV0FBTyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBRTNEOztBQUVELE9BQUssRUFBRSxRQUFROztBQUVmLFFBQU0sRUFBRSxrQkFBWTs7QUFFbEIsV0FBTyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBRTNEOztBQUVELFdBQVMsRUFBRSxxQkFBWTs7QUFFckIsV0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsVUFBVSxRQUFRLEVBQUU7QUFDNUMsYUFBTyxRQUFRLENBQUMsU0FBUyxFQUFFLENBQUM7S0FDN0IsQ0FBQyxDQUFDO0dBRUo7O0FBRUQsT0FBSyxFQUFFLGVBQVUsU0FBUyxFQUFFOztBQUUxQixRQUFJLENBQUMsU0FBUyxZQUFZLElBQUksQ0FBQyxXQUFXLEVBQUU7QUFDMUMsWUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0tBQ3BFOztBQUVELFFBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDOztBQUU5QyxXQUFPLElBQUksQ0FBQztHQUViOztDQUVGLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9qc29uYXBpL1Jlc291cmNlQ29sbGVjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuJ3VzZSBzdHJpY3QnO1xuXG5cbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG52YXIgQmFja2JvbmUgPSByZXF1aXJlKCdiYWNrYm9uZScpO1xudmFyIENvbGxlY3Rpb24gPSBCYWNrYm9uZS5Db2xsZWN0aW9uO1xudmFyIFJlc291cmNlID0gcmVxdWlyZSgnLi9SZXNvdXJjZScpO1xudmFyIFNlcmlhbGl6ZU1peGluID0gcmVxdWlyZSgnLi9TZXJpYWxpemVNaXhpbicpO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gQ29sbGVjdGlvbi5leHRlbmQoXy5leHRlbmQoe30sIFNlcmlhbGl6ZU1peGluLCB7XG5cbiAgc3luYzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0sXG5cbiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gKG1vZGVscywgb3B0aW9ucykge1xuXG4gICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLnR5cGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigndHlwZSBpcyByZXF1aXJlZCcpO1xuICAgIH1cblxuICAgIHRoaXMudHlwZSA9IG9wdGlvbnMudHlwZTtcblxuICAgIHRoaXMub24oJ2FkZCcsIGZ1bmN0aW9uIChyZXNvdXJjZSkge1xuXG4gICAgICBpZiAocmVzb3VyY2UudHlwZSAhPT0gdGhpcy50eXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndHlwZSBbJyArIHRoaXMudHlwZSArICddIGlzIHJlcXVpcmVkJyk7XG4gICAgICB9XG5cbiAgICB9KTtcblxuICB9LFxuXG4gIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuXG4gICAgaWYgKGFyZ3VtZW50c1swXSkge1xuICAgICAgYXJndW1lbnRzWzBdLnR5cGUgPSBhcmd1bWVudHNbMF0udHlwZSB8fCB0aGlzLnR5cGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIENvbGxlY3Rpb24ucHJvdG90eXBlLmNyZWF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gIH0sXG5cbiAgbW9kZWw6IFJlc291cmNlLFxuXG4gIHRvSlNPTjogZnVuY3Rpb24gKCkge1xuXG4gICAgcmV0dXJuIENvbGxlY3Rpb24ucHJvdG90eXBlLnRvSlNPTi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gIH0sXG5cbiAgdG9MaW5rYWdlOiBmdW5jdGlvbiAoKSB7XG5cbiAgICByZXR1cm4gXy5tYXAodGhpcy5tb2RlbHMsIGZ1bmN0aW9uIChyZXNvdXJjZSkge1xuICAgICAgcmV0dXJuIHJlc291cmNlLnRvTGlua2FnZSgpO1xuICAgIH0pO1xuXG4gIH0sXG5cbiAgbWVyZ2U6IGZ1bmN0aW9uIChyZXNvdXJjZXMpIHtcblxuICAgIGlmICghcmVzb3VyY2VzIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdtZXJnZWQgcmVzb3VyY2VzIHNob3VsZCBiZSBhIFJlc291cmNlQ29sbGVjdGlvbicpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0KHJlc291cmNlcy5tb2RlbHMsIHsgcmVtb3ZlOiBmYWxzZSB9KTtcblxuICAgIHJldHVybiB0aGlzO1xuXG4gIH1cblxufSkpO1xuIl19