

'use strict';

var _ = require('lodash');

module.exports = function diffJSON(oldObj, newObj) {

  if (!(oldObj && newObj)) {
    throw new Error('two object is required:', oldObj, newObj);
  }

  var oldKeys = _.keys(oldObj);
  var newKeys = _.keys(newObj);

  var removedKeys = _.difference(oldKeys, newKeys);
  var addedKeys = _.difference(newKeys, oldKeys);
  var changedKeys = _.chain(_.intersection(oldKeys, newKeys)).filter(function (key) {
    return !_.isEqual(oldObj[key], newObj[key]);
  }).value();

  var result = {};

  _.each(removedKeys, function (key) {
    result[key] = {
      removed: oldObj[key]
    };
  });

  _.each(addedKeys, function (key) {
    result[key] = {
      added: newObj[key]
    };
  });

  _.each(changedKeys, function (key) {
    result[key] = {
      removed: oldObj[key],
      added: newObj[key]
    };
  });

  return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9qc29uYXBpL2xpYi9kaWZmSlNPTi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLFlBQVksQ0FBQzs7QUFFYixJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7O0FBRzFCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxRQUFRLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRTs7QUFFakQsTUFBSSxFQUFFLE1BQU0sSUFBSSxNQUFNLENBQUEsQUFBQyxFQUFFO0FBQ3ZCLFVBQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0dBQzVEOztBQUVELE1BQUksT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDN0IsTUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFFN0IsTUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDakQsTUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDL0MsTUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUN4RCxNQUFNLENBQUMsVUFBVSxHQUFHLEVBQUU7QUFDckIsV0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0dBQzdDLENBQUMsQ0FDRCxLQUFLLEVBQUUsQ0FBQzs7QUFFWCxNQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7O0FBRWhCLEdBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFVBQVUsR0FBRyxFQUFFO0FBQ2pDLFVBQU0sQ0FBQyxHQUFHLENBQUMsR0FBRztBQUNaLGFBQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDO0tBQ3JCLENBQUM7R0FDSCxDQUFDLENBQUM7O0FBRUgsR0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBVSxHQUFHLEVBQUU7QUFDL0IsVUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHO0FBQ1osV0FBSyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUM7S0FDbkIsQ0FBQztHQUNILENBQUMsQ0FBQzs7QUFFSCxHQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxVQUFVLEdBQUcsRUFBRTtBQUNqQyxVQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7QUFDWixhQUFPLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNwQixXQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQztLQUNuQixDQUFDO0dBQ0gsQ0FBQyxDQUFDOztBQUVILFNBQU8sTUFBTSxDQUFDO0NBRWYsQ0FBQyIsImZpbGUiOiJzcmMvanNvbmFwaS9saWIvZGlmZkpTT04uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlmZkpTT04ob2xkT2JqLCBuZXdPYmopIHtcblxuICBpZiAoIShvbGRPYmogJiYgbmV3T2JqKSkge1xuICAgIHRocm93IG5ldyBFcnJvcigndHdvIG9iamVjdCBpcyByZXF1aXJlZDonLCBvbGRPYmosIG5ld09iaik7XG4gIH1cblxuICB2YXIgb2xkS2V5cyA9IF8ua2V5cyhvbGRPYmopO1xuICB2YXIgbmV3S2V5cyA9IF8ua2V5cyhuZXdPYmopO1xuXG4gIHZhciByZW1vdmVkS2V5cyA9IF8uZGlmZmVyZW5jZShvbGRLZXlzLCBuZXdLZXlzKTtcbiAgdmFyIGFkZGVkS2V5cyA9IF8uZGlmZmVyZW5jZShuZXdLZXlzLCBvbGRLZXlzKTtcbiAgdmFyIGNoYW5nZWRLZXlzID0gXy5jaGFpbihfLmludGVyc2VjdGlvbihvbGRLZXlzLCBuZXdLZXlzKSlcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiAhXy5pc0VxdWFsKG9sZE9ialtrZXldLCBuZXdPYmpba2V5XSk7XG4gICAgfSlcbiAgICAudmFsdWUoKTtcblxuICB2YXIgcmVzdWx0ID0ge307XG5cbiAgXy5lYWNoKHJlbW92ZWRLZXlzLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmVzdWx0W2tleV0gPSB7XG4gICAgICByZW1vdmVkOiBvbGRPYmpba2V5XVxuICAgIH07XG4gIH0pO1xuXG4gIF8uZWFjaChhZGRlZEtleXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXN1bHRba2V5XSA9IHtcbiAgICAgIGFkZGVkOiBuZXdPYmpba2V5XVxuICAgIH07XG4gIH0pO1xuXG4gIF8uZWFjaChjaGFuZ2VkS2V5cywgZnVuY3Rpb24gKGtleSkge1xuICAgIHJlc3VsdFtrZXldID0ge1xuICAgICAgcmVtb3ZlZDogb2xkT2JqW2tleV0sXG4gICAgICBhZGRlZDogbmV3T2JqW2tleV1cbiAgICB9O1xuICB9KTtcblxuICByZXR1cm4gcmVzdWx0O1xuXG59O1xuIl19